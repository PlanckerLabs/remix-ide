msgid ""
msgstr ""
"Project-Id-Version: remix-translation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-24 17:10+0200\n"
"PO-Revision-Date: 2023-09-07 19:38\n"
"Last-Translator: \n"
"Language-Team: Spanish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: remix-translation\n"
"X-Crowdin-Project-ID: 431830\n"
"X-Crowdin-Language: es-ES\n"
"X-Crowdin-File: /[ethereum.remix-ide] master/docs/_build/gettext/unittesting_examples.pot\n"
"X-Crowdin-File-ID: 6508\n"
"Language: es_ES\n"

#: ../../unittesting_examples.md:1
msgid "Testing by Example"
msgstr "Pruebas con el ejemplo"

#: ../../unittesting_examples.md:4
msgid "Here are some examples which can give you better understanding to plan your tests."
msgstr "He aquí algunos ejemplos que pueden darle una mejor comprensión para planificar sus pruebas."

#: ../../unittesting_examples.md:6
msgid "**Note:** Examples in this section are intended to give you a push for development. We don't recommend to rely on them without verifying at your end."
msgstr "**Nota:** Los ejemplos de esta sección pretenden darle un empujón para el desarrollo. No recomendamos confiar en ellos sin verificar en su extremo."

#: ../../unittesting_examples.md:8
msgid "1. Simple example"
msgstr "1. Ejemplo sencillo"

#: ../../unittesting_examples.md:9
msgid "In this example, we test setting & getting variables."
msgstr "En este ejemplo, probamos establecer y obtener variables."

#: ../../unittesting_examples.md:11
msgid "Contract/Program to be tested: `Simple_storage.sol`"
msgstr "Contrato/Programa a probar: `Simple_storage.sol`"

#: ../../unittesting_examples.md:32
msgid "Test contract/program: `simple_storage_test.sol`"
msgstr "Contrato/programa de prueba: `simple_storage_test.sol`"

#: ../../unittesting_examples.md:60
msgid "2. Testing a method involving `msg.sender`"
msgstr "2. Probar un método que incluya `msg.sender`."

#: ../../unittesting_examples.md:61
msgid "In Solidity, `msg.sender` plays a great role in access management of a smart contract methods interaction. Different `msg.sender` can help to test a contract involving multiple accounts with different roles. Here is an example for testing such case:"
msgstr "En Solidity, `msg.sender` desempeña un gran papel en la gestión del acceso a la interacción de los métodos de un contrato inteligente. Diferentes `msg.sender` pueden ayudar a probar un contrato que involucre múltiples cuentas con diferentes roles. He aquí un ejemplo para probar tal caso:"

#: ../../unittesting_examples.md:63
msgid "Contract/Program to be tested: `Sender.sol`"
msgstr "Contrato/Programa a probar: `Sender.sol`"

#: ../../unittesting_examples.md:85
msgid "Test contract/program: `Sender_test.sol`"
msgstr "Contrato/programa de prueba: `Emisor_prueba.sol`"

#: ../../unittesting_examples.md:137
msgid "3. Testing method execution"
msgstr "3. Ejecución del método de prueba"

#: ../../unittesting_examples.md:139
msgid "With Solidity, one can directly verify the changes made by a method in storage by retrieving those variables from a contract. But testing for a successful method execution takes some strategy. Well that is not entirely true, when a test is successful - it is usually obvious why it passed. However, when a test fails, it is essential to understand why it failed."
msgstr "Con Solidity, se pueden verificar directamente los cambios realizados por un método en el almacenamiento recuperando esas variables de un contrato. Pero comprobar que un método se ha ejecutado correctamente requiere cierta estrategia. Bueno, eso no es del todo cierto, cuando una prueba tiene éxito - por lo general es obvio por qué pasó. Sin embargo, cuando una prueba falla, es esencial comprender por qué falló."

#: ../../unittesting_examples.md:141
msgid "To help in such cases, Solidity introduced the `try-catch` statement in version `0.6.0`. Previously, we had to use low-level calls to track down what was going on."
msgstr "Para ayudar en estos casos, Solidity introdujo la sentencia `try-catch` en la versión `0.6.0`. Anteriormente, teníamos que utilizar llamadas de bajo nivel para averiguar qué estaba pasando."

#: ../../unittesting_examples.md:143
msgid "Here is an example test file that use both **try-catch** blocks and **low level calls**:"
msgstr "He aquí un archivo de prueba de ejemplo que utiliza tanto bloques de **intento de captura** como **llamadas de bajo nivel**:"

#: ../../unittesting_examples.md:145
msgid "Contract/Program to be tested: `AttendanceRegister.sol`"
msgstr "Contrato/Programa a probar: `AttendanceRegister.sol`"

#: ../../unittesting_examples.md:174
msgid "Test contract/program: `AttendanceRegister_test.sol`"
msgstr "Contrato/programa de prueba: `AttendanceRegister_test.sol`"

#: ../../unittesting_examples.md:262
msgid "4. Testing a method involving `msg.value`"
msgstr "4. Probar un método que implique `msg.value`"

#: ../../unittesting_examples.md:263
msgid "In Solidity, ether can be passed along with a method call which is accessed inside contract as `msg.value`. Sometimes, multiple calculations in a method are performed based on `msg.value` which can be tested with various values using Remix's Custom transaction context. See the example:"
msgstr "En Solidity, el éter puede pasarse junto con una llamada a un método al que se accede dentro del contrato como `msg.value`. A veces, se realizan múltiples cálculos en un método basándose en `msg.value` que puede probarse con varios valores utilizando el contexto de transacción personalizado de Remix. Vea el ejemplo:"

#: ../../unittesting_examples.md:265
msgid "Contract/Program to be tested: `Value.sol`"
msgstr "Contrato/Programa a probar: `Valor.sol`"

#: ../../unittesting_examples.md:285
msgid "Test contract/program: `Value_test.sol`"
msgstr "Contrato/programa de prueba: `Valor_prueba.sol`"

#: ../../unittesting_examples.md:331
msgid "5. Testing a method involving `msg.sender` and `msg.value`"
msgstr "5. Probar un método que incluya `msg.sender` y `msg.value`."

#: ../../unittesting_examples.md:332
msgid "In the following test, we will be emulating multiple accounts making deposits in a smart contract to the same recipient and finally having the recipient withdraw the lump sum of all donations. We are also verifying that the donations match the expected amounts. This example really drives home how could you switch between different accounts, while using a set of different msg.value amounts."
msgstr "En la siguiente prueba, estaremos emulando múltiples cuentas haciendo depósitos en un contrato inteligente al mismo receptor y finalmente haciendo que el receptor retire la suma global de todas las donaciones. También estamos verificando que las donaciones coinciden con las cantidades esperadas. Este ejemplo realmente pone de manifiesto cómo se puede cambiar entre diferentes cuentas, mientras se utiliza un conjunto de diferentes cantidades msg.value."

#: ../../unittesting_examples.md:334
msgid "Contract/Program to be tested: `Donations.sol`"
msgstr "Contrato/Programa a probar: `Donaciones.sol`"

#: ../../unittesting_examples.md:379
msgid "Test contract/program: `Donations_test.sol`"
msgstr "Contrato/programa de prueba: `Donaciones_prueba.sol`"

